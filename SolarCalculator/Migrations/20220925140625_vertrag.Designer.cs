// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarCalculator.Data;

#nullable disable

namespace SolarCalculator.Migrations
{
    [DbContext(typeof(SolarCalculatorContext))]
    [Migration("20220925140625_vertrag")]
    partial class vertrag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolarCalculator.Models.Anbieter", b =>
                {
                    b.Property<int>("AnbieterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnbieterId"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firmenbezeichnung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hausnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("preism")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("strasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("stromspeicher")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("verpachtung")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("weitereVorteile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnbieterId");

                    b.ToTable("Anbieter");
                });

            modelBuilder.Entity("SolarCalculator.Models.Haus", b =>
                {
                    b.Property<int>("HausId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HausId"), 1L, 1);

                    b.Property<int?>("NutzerId")
                        .HasColumnType("int");

                    b.Property<string>("dachausrichtung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("dachfaeche")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("dachwinkel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("plz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("stomkosten")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("stromverbrauch")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HausId");

                    b.HasIndex("NutzerId");

                    b.ToTable("Haeuser");
                });

            modelBuilder.Entity("SolarCalculator.Models.Nutzer", b =>
                {
                    b.Property<int>("NutzerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutzerId"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hausnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NutzerId");

                    b.ToTable("Nutzer");
                });

            modelBuilder.Entity("SolarCalculator.Models.Vertrag", b =>
                {
                    b.Property<int>("VertragId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VertragId"), 1L, 1);

                    b.Property<int>("AnbieterId")
                        .HasColumnType("int");

                    b.Property<int>("NutzerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("gesamtkosten")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("praemie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("provision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<bool>("stromspeicher")
                        .HasColumnType("bit");

                    b.Property<bool>("verpachtung")
                        .HasColumnType("bit");

                    b.HasKey("VertragId");

                    b.ToTable("Vertraege");
                });

            modelBuilder.Entity("SolarCalculator.Models.Haus", b =>
                {
                    b.HasOne("SolarCalculator.Models.Nutzer", null)
                        .WithMany("haeuser")
                        .HasForeignKey("NutzerId");
                });

            modelBuilder.Entity("SolarCalculator.Models.Nutzer", b =>
                {
                    b.Navigation("haeuser");
                });
#pragma warning restore 612, 618
        }
    }
}
